{{file.target_language}} = @<C++>@
{{file.file_name}} = @<ValueCPP>@
{{file.namespace}} = @<DLDL::filetemplate>@
{{file.extension}} = @<h>@

{{language_full_name_underscore}} = @<>@

{{unknown_reference_implementation}} = @<{{unknown_reference}}.Set(::deamer::language::type::definition::object::special::Uninitialized<::deamer::language::type::definition::object::main::NonTerminal>("NonTerminal", "{{unknown_reference}}", "Unknown reference to (most likely) a NonTerminal!"));>@
{{add_unknown_reference}} = @<AddObject({{unknown_reference}});>@

{{value_rule_name}}          = @<value_object__{{value_object_name}}>@
{{value_abstraction_name}}   = @<value_abstraction__{{value_abstraction_primary_name}}>@

{{value_object_type_standard}} = @<::deamer::language::type::definition::object::main::ValueObjectType::Standard>@
{{value_object_type_characteristic}} = @<::deamer::language::type::definition::object::main::ValueObjectType::Characteristic>@

{{value_object_implementation}} = @<
		{{value_rule_name}}.Set(::deamer::language::type::definition::object::main::ValueObject(
			{{value_object_type}},
			"{{value_object_rule_name_str}}",
			{
{{value_object_syntactic_relation.Variable_Field}}
			},
			{
{{value_object_abstraction.Variable_Field}}
			}
		));>@

{{value_object_syntactic_relation}} = @<				Language->{{terminal_name}}.Pointer(),>@
{{value_object_abstraction}} = 
@<				{{value_abstraction_name}}.Pointer(),>@

{{add_value_object_implementation}} = @<AddObject({{value_rule_name}});>@
{{add_value_abstraction_implementation}} = @<AddObject({{value_abstraction_name}});>@

{{value_abstraction_implementation}} = @<
		{{value_abstraction_name}}.Set(::deamer::language::type::definition::object::main::ValueAbstraction(
			{{value_abstraction_type}},
			"{{value_abstraction_value}}",
			{
{{value_underlying_abstraction.Variable_Field}}
			}
		));>@

{{value_abstraction_type}} = @<::deamer::language::type::definition::object::main::ValueAbstractionType::{{value_abstraction_type_impl}}>@
{{value_abstraction_type_isstring}} = @<IsString>@
{{value_abstraction_type_isvector}} = @<IsVector>@
{{value_abstraction_type_isvalue}} = @<IsValue>@
{{value_abstraction_type_isinteger}} = @<IsInteger>@
{{value_abstraction_type_isdecimal}} = @<IsDecimal>@
{{value_abstraction_type_stringstartpattern}} = @<StringStartPattern>@
{{value_abstraction_type_stringendpattern}} = @<StringEndPattern>@
{{value_abstraction_type_stringescapepattern}} = @<StringEscapePattern>@
{{value_abstraction_type_wildcardpattern}} = @<WildcardPattern>@

{{value_underlying_abstraction}} = @<				value_abstraction__{{value_abstraction_secondary_name}}.Pointer(),>@
